package lessons.lesson03.homework

// 1. Название мероприятия (неизменяемая публичная переменная, известная на момент написания)
val eventName: String = "Hackathon Survival"

// 2. Дата проведения (публичная переменная, известная на момент написания, но может быть изменена)
var eventDate: String = "10-12 ноября 2025"

// 3. Место проведения (может измениться, например, из-за ремонта)
var venue: String = "Технопарк 'Сколково'"

// 4. Подробный бюджет мероприятия (приватная, неизменяемая, т.к. утверждён)
private val detailedBudget: String = "Смета №123: Оборудование - 1 млн, Кейтеринг - 500 тыс."

// 5. Количество участников (может меняться в процессе регистрации)
var participantCount: Int = 0

// 6. Длительность хакатона (обычно не меняется)
val durationInHours: Int = 48

// 7. Контактная информация и условия соглашений с поставщиками (внутренняя, неизменяемая информация)
private val supplierContracts: String = "ООО 'Еда и Точка': договор №567; ООО 'ТехноРент': договор №568"

// 8. Текущее состояние хакатона (статус) (публично для чтения, но меняется только изнутри)
var hackathonStatus: String = "Регистрация открыта"
    private set // Запрещает изменение этого поля извне класса/файла

// 9. Список спонсоров (может пополняться)
var sponsors: String = "Yandex, VK, Tinkoff"

// 10. Бюджет мероприятия (публичная, общая сумма, не меняется)
val totalBudget: Int = 1_500_000

// 11. Текущий уровень доступа к интернету (может меняться, например, при сбоях)
var internetAccessLevel: String = "Высокий"

// 12. Информация о транспортировке и координации (внутренняя, может обновляться)
private var logisticsInfo: String = "Оборудование доставляется 9 ноября. Ответственный - Иванов И.И."

// 13. Количество команд (меняется в процессе регистрации)
var teamCount: Int = 0

// 14. Перечень задач (неизменяемый, определяется заранее)
val taskList: String = "1. Мобильное приложение для волонтеров. 2. AI-анализатор кода. 3. Система умного города."

// 15. План эвакуации (неизменяемый, критически важный)
val evacuationPlan: String = "Схема эвакуации находится у каждого выхода."

// 16. Список доступного оборудования (неизменяемый, общий перечень)
val availableEquipment: String = "Ноутбуки - 50 шт, 3D-принтеры - 2 шт, VR-шлемы - 5 шт."

// 17. Список свободного оборудования (постоянно меняется, вычисляемое значение)
var occupiedEquipmentCount: Int = 10
val freeEquipment: String
    get() = "Свободно сейчас: Ноутбуков - ${50 - occupiedEquipmentCount} шт."

// 18. График питания участников (публичная, изменяемая, с отложенной инициализацией)
lateinit var mealSchedule: String

// 19. План мероприятий на случай сбоев (внутренний, неизменяемый)
private val contingencyPlan: String = "При отключении света - запустить генератор. При сбое сети - переключиться на резервный канал."

// 20. Список экспертов и жюри (неизменяемый)
val juryAndExperts: String = "Эксперты: А. Смирнов (AI), В. Петров (Mobile). Жюри: ..."

// 21. Политика конфиденциальности (неизменяемая)
val privacyPolicy: String = "Все данные участников защищены согласно ФЗ-152."

// 22. Приватные отзывы (фидбэк) (внутренняя информация, будет пополняться)
private var privateFeedback: String = ""

// 23. Текущая температура в помещении (постоянно меняется)
var currentTemperature: Int = 22

// 24. Данные мониторинга сети (ресурсоёмкая операция, вычисляется по запросу)
val networkPerformanceData: String by lazy {
    // Имитация сложного запроса к сетевому оборудованию
    println("Выполняется сбор данных о производительности сети...")
    "Ping: 10ms, Download: 500 Mbps, Upload: 300 Mbps"
}

// 25. Регулятор скорости интернета (может меняться, с проверкой значения)
var internetSpeedFactor: Double = 1.0
    set(value) {
        if (value in 0.0..1.0) { // Валидация: значение должно быть от 0 до 1
            field = value
        }
    }

// 26. Уровень освещения (постоянно меняется)
var lightLevelLux: Int = 800

// 27. Лог событий мероприятия (будет постоянно пополняться)
var eventLog: String = "10:00 - Открытие мероприятия\n"

// 28. Возможность получения медицинской помощи (да/нет, неизменно)
val medicalAssistanceAvailable: Boolean = true

// 29. Планы и процедуры для обеспечения безопасности (внутренняя, неизменяемая информация)
private val securityProcedures: String = "Протокол 'Код Красный': блокировка всех выходов, вызов охраны."

// 30. Регистрационный номер мероприятия (неизменяемый)
val registrationNumber: String = "MH-2025-11-10"

// 31. Максимально допустимый уровень шума (неизменяемая константа)
const val maxAllowedNoiseLevel: Int = 85

// 32. Индикатор превышения уровня шума (вычисляемое значение)
var currentNoiseLevel: Int = 70
val isNoiseLevelExceeded: Boolean
    get() = currentNoiseLevel > maxAllowedNoiseLevel

// 33. План взаимодействия с прессой (внутренний, может корректироваться)
private var pressInteractionPlan: String = "Аккредитованные журналисты: Forbes, РБК. Интервью в 15:00."

// 34. Детальная публичная информация о проектах (ресурсоёмкая, ленивая инициализация)
val publicProjectsInfo: String by lazy {
    println("Запуск компиляции и сбора статистики по проектам...")
    "Команда 'Альфа': проект 'AI-помощник', статус - OK. Команда 'Бета': ..."
}

// 35. Статус получения всех разрешений (может измениться)
var permitsStatus: String = "Все разрешения получены"

// 36. Индикатор доступности специализированного оборудования (вычисляемое)
var isSpecialEquipmentTaken: Boolean = false
val isSpecialEquipmentAvailable: Boolean
    get() = !isSpecialEquipmentTaken

// 37. Список партнеров мероприятия (может пополняться)
var partners: String = "Skolkovo Foundation, GeekBrains"

// 38. Отчет после мероприятия (будет доступен только после завершения, отложенная инициализация)
lateinit var finalReport: String

// 39. Внутренние правила распределения призов (секретно, не меняется)
private val prizeDistributionRules: String = "1 место - 50%, 2 место - 30%, 3 место - 20% от призового фонда."

// 40. Список разыгрываемых призов (может измениться, если спонсор добавит что-то новое)
var prizeList: String = "1 место - 500 000 руб, 2 место - MacBook Pro, 3 место - iPad"

// 41. Контактная информация экстренных служб (внутренняя, не меняется)
private val emergencyContacts: String = "Охрана: 101, Медпункт: 102, Пожарная служба: 103"

// 42. Особые условия для участников с ограниченными возможностями (могут добавиться по запросу)
var specialNeedsAccommodations: String = "Доступен пандус, лифт. Выделена тихая зона."

// 43. Общее настроение участников (меняется, определяется опросами)
var participantMood: String = "Воодушевленное"

// 44. Подробный план хакатона (отложенная инициализация, т.к. зависит от состава команд)
lateinit var detailedHackathonPlan: String

// 45. Имя специального гостя (отложенная инициализация, будет объявлено позже)
lateinit var specialGuestName: String

// 46. Максимальное количество людей в помещении (неизменяемая характеристика места)
val maxCapacity: Int = 300

// 47. Количество часов на команду (неизменяемое правило)
val hoursPerTeam: Int = 40